import{o as n,c as a,d as s,b as t}from"./app.32ae7a77.js";const p='{"title":"Vue","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation"}],"relativePath":"Installation/Vue.md","lastUpdated":1618948608784}',e={},o=t('<h1 id="vue"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h1><h2 id="installation"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>You can either install the full component library:</p><div class="language-js"><pre><code><span class="token keyword">import</span> RepairComponents <span class="token keyword">from</span> <span class="token string">&#39;repair-components&#39;</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>RepairComponents<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token comment">// options (see below)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>...or import only the specific components you need:</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> RButton<span class="token punctuation">,</span> RSection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;repair-components&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span>\n    RButton<span class="token punctuation">,</span>\n    RSection<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',6);e.render=function(t,p,e,c,i,l){return n(),a("div",null,[o,s(" ## Options\n\n### `prefix`\n\nSome Repair components could be embedded in another website. To avoid styling conflicts, you can configure a prefix:\n\n```js\nVue.use(ComponentLibrary {\n    prefix: 'r-'\n});\n```\n\nMake sure to configure the same prefix in your `tailwind.config.js` as well.\n\nThe component library creates a global `$prefix` function to manage prefixing your classes:\n\n```html\n<button :class=\"$prefix('inline-block px-4 py-2')\"></button>\n```\n\nresults in\n\n```html\n<button class=\"r-inline-block r-px-4 r-py-2\"></button>\n``` ")])};export default e;export{p as __pageData};
